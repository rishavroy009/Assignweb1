#include <iostream>
#include <string>
#include <npapi.h> // Assuming NPAPI is being used

bool WebBindings::Set(NPP npp, NPObject* object, NPIdentifier identifier, const NPVariant* value) {
    // Log when the function is called
    std::cout << "WebBindings::Set called" << std::endl;
    
    // Check if the identifier represents the 'width' property
    char* propertyName = NPN_UTF8FromIdentifier(identifier); // Converts NPIdentifier to string

    if (propertyName) {
        std::cout << "Property being set: " << propertyName << std::endl;
        
        // Check if the property is 'width'
        if (std::string(propertyName) == "width") {
            std::cout << "'width' property is being set" << std::endl;

            // Log the value being set, assuming it's a numeric type
            if (value->type == NPVariantType_Int32) {
                std::cout << "Setting 'width' to: " << value->value.intValue << std::endl;
            } else if (value->type == NPVariantType_Double) {
                std::cout << "Setting 'width' to: " << value->value.doubleValue << std::endl;
            } else if (value->type == NPVariantType_String) {
                std::cout << "Setting 'width' to: " << std::string(value->value.stringValue.UTF8Characters, value->value.stringValue.UTF8Length) << std::endl;
            } else {
                std::cout << "Unknown type for 'width' property" << std::endl;
            }
        }
    }

    return true; // Proceed with the rest of the function
}
