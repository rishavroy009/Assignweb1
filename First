Important Events in EME
keyneeded:

Description: Triggered when a key is required for decryption of the media.
Usage: Implement this event to fetch the necessary key from your key store or service when it is called.
keyadded:

Description: Fired when a key has been successfully added to a MediaKeySession.
Usage: Can be used to confirm that the key has been accepted and is available for decryption.
keymessage:

Description: This event is emitted when a key message is generated.
Usage: You can handle this event to send the key message to a license server if using a system that requires it (not applicable to ClearKey).
close:

Description: Fired when a MediaKeySession is closed.
Usage: Useful for cleaning up resources or notifying the user that playback is no longer protected.
Important APIs and Method Calls in EME
navigator.requestMediaKeySystemAccess():

Purpose: Requests access to a specified media key system.
Parameters:
keySystem: A string representing the key system (e.g., urn:uuid:9b2b663c-0a0c-4a8a-bb00-4d8c66c7f6f1 for ClearKey).
config: An array of configuration objects specifying the capabilities.
Returns: A promise that resolves to MediaKeySystemAccess.
MediaKeySystemAccess.createMediaKeys():

Purpose: Creates a new MediaKeys object associated with the key system.
Returns: A promise that resolves to a MediaKeys object.
MediaKeys.createSession():

Purpose: Creates a new MediaKeySession for handling key requests and updates.
Returns: A MediaKeySession object.
MediaKeySession.generateRequest():

Purpose: Initiates the process to retrieve a key for decrypting media.
Parameters:
initDataType: The type of initialization data (e.g., 'cenc').
initData: An array containing the initialization data.
Returns: A promise that resolves when the request is sent.
MediaKeySession.update():

Purpose: Updates the session with a new key.
Parameters: The key data to be added.
Returns: A promise that resolves when the key is successfully added.
MediaKeySession.close():

Purpose: Closes the media key session.
Returns: A promise that resolves when the session is closed.
