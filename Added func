void collectKeysValues(const pbnjson::JValue& value, std::set<std::string>& keys, std::vector<std::string>& values) {
    if (value.isObject()) {
        for (const auto& key : value.children()) {
            keys.insert(key.first.asString());
            collectKeysValues(key.second, keys, values);
        }
    } else if (value.isArray()) {
        for (const auto& element : value.items()) {
            collectKeysValues(element, keys, values);
        }
    } else if (value.isString()) {
        values.push_back(value.asString());
    } else if (value.isNumber()) {
        values.push_back(std::to_string(value.asNumber<double>()));
    } else if (value.isBoolean()) {
        values.push_back(value.asBool() ? "true" : "false");
    }
}
